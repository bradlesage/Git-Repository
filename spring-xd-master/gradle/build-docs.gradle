/*
 * Tasks related to building the Spring XD documentation
*/
buildscript {
	repositories {
		maven { url "http://repo.spring.io/plugins-snapshot" }
		jcenter()
	}
	dependencies {
		classpath 'io.spring.gradle:docbook-reference-plugin:0.3.0'
		classpath 'org.asciidoctor:asciidoctor-gradle-plugin:1.5.0'
		//classpath 'org.asciidoctor:asciidoctorj-pdf:1.5.0-alpha.6' // asciidoctor pdf still has issues with callouts, etc. Still relying on docbook+pdf for now
	}

}

def docsDir = rootProject.file('src/docs/asciidoc') // Will be default with newer asciidoctor plugin

project('documentation-toolchain') {
	startScripts.enabled = false
	description = 'Utilities for generating/verifying documentation'
	dependencies {
		compile project(':spring-xd-dirt')
		testCompile project(':spring-xd-shell')
	}

	tasks['findMainClass'].enabled = false

	task shellReferenceDoc(type: JavaExec) {
		classpath = sourceSets.test.runtimeClasspath
		main = 'org.springframework.xd.documentation.ShellReferenceDoc'
		workingDir = rootProject.file('.')
		args = [
				"$docsDir/ShellReference.asciidoc"
		]
	}

	task moduleOptionsReferenceDoc(type: JavaExec, dependsOn: ':spring-xd-dirt:build') {
		classpath = sourceSets.main.runtimeClasspath
		main = 'org.springframework.xd.documentation.ModuleOptionsReferenceDoc'
		workingDir = rootProject.file('.')
		args = [
				"$docsDir/Sources.asciidoc",
				"$docsDir/Processors.asciidoc",
				"$docsDir/Sinks.asciidoc",
				"$docsDir/Jobs.asciidoc",
				"$docsDir/Counters-and-Gauges.asciidoc",
		]
	}
	task checkDocsLinks(type: JavaExec, dependsOn: [compileJava, shellReferenceDoc, moduleOptionsReferenceDoc]) {
		classpath = sourceSets.main.runtimeClasspath
		main = 'org.springframework.xd.documentation.AsciidocLinkChecker'
		args = [
				"file:$docsDir/*.asciidoc"
		]
	}


}

apply plugin: org.asciidoctor.gradle.AsciidoctorPlugin

asciidoctor {
	sourceDir file("$docsDir")
	sourceDocumentNames = files("$docsDir/index.asciidoc") // Change in >= 1.5.1
	outputDir file("$buildDir/html")
	backends = ['html5', 'docbook']
	logDocuments = true
	options = [
		doctype: 'book',
		attributes: [
			docinfo: '',
			toc2: '',
			'compat-mode': '',
			imagesdir: '',
			stylesdir: "stylesheets/",
			stylesheet: 'golo.css',
			appversion: "$version",
			'source-highlighter': 'highlightjs'
		]
	]
}

asciidoctor.dependsOn ([':documentation-toolchain:checkDocsLinks', ':documentation-toolchain:shellReferenceDoc', ':documentation-toolchain:moduleOptionsReferenceDoc'])

apply plugin: DocbookReferencePlugin

reference {
	sourceFileName = 'index.xml'
	sourceDir = file("$buildDir/html")
	pdfFilename = 'spring-xd-reference.pdf'
	expandPlaceholders = ''
}

reference.dependsOn asciidoctor


task api(type: Javadoc) {
	group = 'Documentation'
	description = 'Generates aggregated Javadoc API documentation.'
	title = "${rootProject.description} ${version} API"
	options.memberLevel = org.gradle.external.javadoc.JavadocMemberLevel.PROTECTED
	options.author = true
	options.header = rootProject.description
	options.links(javadocLinks)
	options.overview = 'src/api/overview.html'

	source rootProject.javaProjects.collect { project ->
		project.sourceSets.main.allJava
	}
	destinationDir = new File(buildDir, "api")
	classpath = files(rootProject.javaProjects.collect { project ->
		project.sourceSets.main.compileClasspath
	})

	if (JavaVersion.current().isJava8Compatible()) {
		allprojects {
			tasks.withType(Javadoc) {
				options.addStringOption('Xdoclint:none', '-quiet')
			}
		}
	}
}

