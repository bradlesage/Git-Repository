/*
 * Function definitions referenced by more than one applied build script
*/

def forceDependencyVersions(project) {
	def hadoopInstalls=['cdh5','hadoop26','hdp22','phd21','phd30']
	if (!hadoopInstalls.contains(project.name)) {
		project.configurations.all { configuration ->
			if ('versionManagement' != configuration.name) {

				def versions = [:]

				project.configurations.versionManagement.files.each {
					it.withReader { reader ->
						def properties = new Properties()
						properties.load(reader)
						versions << properties
					}
				}

				resolutionStrategy {
					eachDependency { details ->
						if (details.requested.group != 'com.google.guava' && details.requested.group != 'org.eclipse.jetty') {
							def version = versions["$details.requested.group:$details.requested.name"]
							if (version) {
								if (details.requested.group == 'org.springframework.data' &&
										(details.requested.name.startsWith('spring-data-hadoop') ||
										details.requested.name.startsWith('spring-yarn') ) ) {
									details.useVersion springDataHadoopBase
								} else {
									details.useVersion version
								}
							}
						}
					}
				}
			}
		}
	}
}

ext {
	forceDependencyVersions = this.&forceDependencyVersions
}
